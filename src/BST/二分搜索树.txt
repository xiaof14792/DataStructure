************************二分搜索树***************************
1.二分搜索树是二叉树

  二分搜索树的每个节点的值：

  		大于其左子树的每个节点的值

  		小于其右子树的每个节点的值


2.每个子树也是二分搜索树


3.存储的元素必须有可比性


4.我们的二分搜索树不包含重复元素

  如果想包含重复元素的话，只需要定义：
  左子树小于等于父节点；或右子树大于等于父节点

  注意：我们之前讲的数组和链表，可以有重复元素


5.二分搜索树添加元素的非递归写法，和链表很像

     本次实现关注递归实现

      二分搜索树的非递归实现留作练习



*****************二分搜索树删除任意元素***********************
分三种情况：

1.删除只有左孩子的节点

2.删除只有右孩子的节点

3.删除左右都有孩子的节点：


  1962年，Hibbard提出：Hibbard Deletion

  删除左右都有孩子的节点d

  找到s = min(d->right)

 s是d的后继

 s->right = delmin(d->right)

 s->left = d->left



*******************************更多***********************************
1.二分搜索树的顺序性

  minimum, maximum

  successor //继任者  比参数值大且最接近参数值的节点

  predecessor  //前任者  比参数值小且最接近参数值的节点

  floor  //不大于给定参数值的最大节点

  ceiling  //不小于给定参数值的最小节点

  rank //参数值在二分搜索树中的排名



2.维护size的二分搜索树

3.维护depth的二分搜索树

4.支持重复元素的二分搜索树